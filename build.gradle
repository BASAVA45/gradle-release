apply plugin: 'groovy'
apply plugin: 'idea'

// Run "gradle installPlugin"
//apply plugin: release.ReleasePlugin
apply from: './installation/apply-local.groovy'
//codenarcRuleSetFiles = [ 'codenarc.groovy' ]
//apply from: 'https://raw.github.com/evgeny-goldin/gradle-plugins/master/src/main/groovy/CodeNarc.gradle'


group = 'gradle-release'

defaultTasks 'clean', 'build'


configurations {
    gcontracts
    compile { extendsFrom gcontracts }
}

dependencies {
    //gcontracts	'org.gcontracts:gcontracts-core:1.2.4'
    compile		gradleApi()
    groovy		localGroovy()
    //testCompile ( "org.spockframework:spock-core:0.5-groovy-1.7" ) { exclude group: 'org.codehaus.groovy' }
}


task( 'unversionedJar', type: Jar, dependsOn: 'jar' ) {
    version = null
    from sourceSets.main.classes
}

def     installedJar   = file( "${gradle.gradleHomeDir.canonicalPath}/lib/plugins/${unversionedJar.archiveName}" )
Closure isGContracts   = { it.name.contains( 'gcontracts' ) }
def     findGContracts = { installedJar.parentFile.listFiles().findAll( isGContracts ) }


task( 'uninstallPlugin' ) {
    group       = 'installation'
    description = 'Removes the plugin from your gradle distribution.'
    doLast {
        delete( installedJar, *findGContracts()) // May not delete, causing following assert to fail
        assert ! ( installedJar.file || findGContracts())
        println "[$installedJar] deleted"
    }
}

task( 'installPlugin', type: Copy, dependsOn: [ unversionedJar, uninstallPlugin ] ) {
    group       = 'installation'
    description = 'Installs the plugin jar in your gradle distribution.'
    from unversionedJar.archivePath
    into installedJar.parentFile
    doLast {
        copy {
            from configurations.gcontracts.files.findAll( isGContracts )
            into installedJar.parentFile
        }
        assert installedJar.file && findGContracts()
        println "Plugin installed as [$installedJar]"
    }
}
